// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: transaction/transaction.proto

package transactionpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DepositRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WalletId       string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Amount         float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // For preventing duplicate transactions
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DepositRequest) Reset() {
	*x = DepositRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRequest) ProtoMessage() {}

func (x *DepositRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRequest.ProtoReflect.Descriptor instead.
func (*DepositRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *DepositRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *DepositRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DepositRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DepositRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

type WithdrawRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	WalletId       string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Amount         float64                `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,4,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // For preventing duplicate transactions
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *WithdrawRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *WithdrawRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WithdrawRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

type TransferRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	FromWalletId   string                 `protobuf:"bytes,1,opt,name=from_wallet_id,json=fromWalletId,proto3" json:"from_wallet_id,omitempty"`
	ToWalletId     string                 `protobuf:"bytes,2,opt,name=to_wallet_id,json=toWalletId,proto3" json:"to_wallet_id,omitempty"`
	Amount         float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Description    string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,5,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // For preventing duplicate transactions
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *TransferRequest) GetFromWalletId() string {
	if x != nil {
		return x.FromWalletId
	}
	return ""
}

func (x *TransferRequest) GetToWalletId() string {
	if x != nil {
		return x.ToWalletId
	}
	return ""
}

func (x *TransferRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransferRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

type TransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "pending", "processing", "completed", "failed"
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Transaction   *Transaction           `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	mi := &file_transaction_transaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransactionResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *GetTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type RetryTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryTransactionRequest) Reset() {
	*x = RetryTransactionRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryTransactionRequest) ProtoMessage() {}

func (x *RetryTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryTransactionRequest.ProtoReflect.Descriptor instead.
func (*RetryTransactionRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *RetryTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type CompensateTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompensateTransactionRequest) Reset() {
	*x = CompensateTransactionRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompensateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompensateTransactionRequest) ProtoMessage() {}

func (x *CompensateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompensateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CompensateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *CompensateTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *CompensateTransactionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TransactionHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WalletId      string                 `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Ascending     bool                   `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
	StatusFilter  string                 `protobuf:"bytes,6,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"` // Optional filter by status
	TypeFilter    string                 `protobuf:"bytes,7,opt,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`       // Optional filter by transaction type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionHistoryRequest) Reset() {
	*x = TransactionHistoryRequest{}
	mi := &file_transaction_transaction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionHistoryRequest) ProtoMessage() {}

func (x *TransactionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionHistoryRequest.ProtoReflect.Descriptor instead.
func (*TransactionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionHistoryRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

func (x *TransactionHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TransactionHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransactionHistoryRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *TransactionHistoryRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *TransactionHistoryRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

func (x *TransactionHistoryRequest) GetTypeFilter() string {
	if x != nil {
		return x.TypeFilter
	}
	return ""
}

type TransactionHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*Transaction         `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	TotalPages    int32                  `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionHistoryResponse) Reset() {
	*x = TransactionHistoryResponse{}
	mi := &file_transaction_transaction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionHistoryResponse) ProtoMessage() {}

func (x *TransactionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionHistoryResponse.ProtoReflect.Descriptor instead.
func (*TransactionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionHistoryResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *TransactionHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TransactionHistoryResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TransactionHistoryResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

type Transaction struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TransactionType     string                 `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // "deposit", "withdraw", "transfer"
	SourceWalletId      string                 `protobuf:"bytes,3,opt,name=source_wallet_id,json=sourceWalletId,proto3" json:"source_wallet_id,omitempty"`
	DestinationWalletId string                 `protobuf:"bytes,4,opt,name=destination_wallet_id,json=destinationWalletId,proto3" json:"destination_wallet_id,omitempty"`
	Amount              float64                `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt           int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           int64                  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Status              string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"` // "pending", "processing", "completed", "failed"
	Description         string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Events              []*TransactionEvent    `protobuf:"bytes,10,rep,name=events,proto3" json:"events,omitempty"`
	SagaState           string                 `protobuf:"bytes,11,opt,name=saga_state,json=sagaState,proto3" json:"saga_state,omitempty"` // "STARTED", "WALLET_UPDATED", "NOTIFICATION_SENT", "COMPLETED", "FAILED"
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_transaction_transaction_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetSourceWalletId() string {
	if x != nil {
		return x.SourceWalletId
	}
	return ""
}

func (x *Transaction) GetDestinationWalletId() string {
	if x != nil {
		return x.DestinationWalletId
	}
	return ""
}

func (x *Transaction) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Transaction) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Transaction) GetEvents() []*TransactionEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Transaction) GetSagaState() string {
	if x != nil {
		return x.SagaState
	}
	return ""
}

type TransactionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionEvent) Reset() {
	*x = TransactionEvent{}
	mi := &file_transaction_transaction_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionEvent) ProtoMessage() {}

func (x *TransactionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_transaction_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionEvent.ProtoReflect.Descriptor instead.
func (*TransactionEvent) Descriptor() ([]byte, []int) {
	return file_transaction_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *TransactionEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *TransactionEvent) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *TransactionEvent) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_transaction_transaction_proto protoreflect.FileDescriptor

const file_transaction_transaction_proto_rawDesc = "" +
	"\n" +
	"\x1dtransaction/transaction.proto\x12\vtransaction\"\x90\x01\n" +
	"\x0eDepositRequest\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tR\x0eidempotencyKey\"\x91\x01\n" +
	"\x0fWithdrawRequest\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x01R\x06amount\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12'\n" +
	"\x0fidempotency_key\x18\x04 \x01(\tR\x0eidempotencyKey\"\xbc\x01\n" +
	"\x0fTransferRequest\x12$\n" +
	"\x0efrom_wallet_id\x18\x01 \x01(\tR\ffromWalletId\x12 \n" +
	"\fto_wallet_id\x18\x02 \x01(\tR\n" +
	"toWalletId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12'\n" +
	"\x0fidempotency_key\x18\x05 \x01(\tR\x0eidempotencyKey\"\xaa\x01\n" +
	"\x13TransactionResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12:\n" +
	"\vtransaction\x18\x04 \x01(\v2\x18.transaction.TransactionR\vtransaction\">\n" +
	"\x15GetTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"@\n" +
	"\x17RetryTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"]\n" +
	"\x1cCompensateTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xdf\x01\n" +
	"\x19TransactionHistoryRequest\x12\x1b\n" +
	"\twallet_id\x18\x01 \x01(\tR\bwalletId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x1c\n" +
	"\tascending\x18\x05 \x01(\bR\tascending\x12#\n" +
	"\rstatus_filter\x18\x06 \x01(\tR\fstatusFilter\x12\x1f\n" +
	"\vtype_filter\x18\a \x01(\tR\n" +
	"typeFilter\"\xb0\x01\n" +
	"\x1aTransactionHistoryResponse\x12<\n" +
	"\ftransactions\x18\x01 \x03(\v2\x18.transaction.TransactionR\ftransactions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\"\x8c\x03\n" +
	"\vTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12)\n" +
	"\x10transaction_type\x18\x02 \x01(\tR\x0ftransactionType\x12(\n" +
	"\x10source_wallet_id\x18\x03 \x01(\tR\x0esourceWalletId\x122\n" +
	"\x15destination_wallet_id\x18\x04 \x01(\tR\x13destinationWalletId\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x01R\x06amount\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x12\x16\n" +
	"\x06status\x18\b \x01(\tR\x06status\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x125\n" +
	"\x06events\x18\n" +
	" \x03(\v2\x1d.transaction.TransactionEventR\x06events\x12\x1d\n" +
	"\n" +
	"saga_state\x18\v \x01(\tR\tsagaState\"z\n" +
	"\x10TransactionEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt2\x8c\x05\n" +
	"\x12TransactionService\x12J\n" +
	"\aDeposit\x12\x1b.transaction.DepositRequest\x1a .transaction.TransactionResponse\"\x00\x12L\n" +
	"\bWithdraw\x12\x1c.transaction.WithdrawRequest\x1a .transaction.TransactionResponse\"\x00\x12L\n" +
	"\bTransfer\x12\x1c.transaction.TransferRequest\x1a .transaction.TransactionResponse\"\x00\x12j\n" +
	"\x15GetTransactionHistory\x12&.transaction.TransactionHistoryRequest\x1a'.transaction.TransactionHistoryResponse\"\x00\x12\\\n" +
	"\x12GetTransactionById\x12\".transaction.GetTransactionRequest\x1a .transaction.TransactionResponse\"\x00\x12\\\n" +
	"\x10RetryTransaction\x12$.transaction.RetryTransactionRequest\x1a .transaction.TransactionResponse\"\x00\x12f\n" +
	"\x15CompensateTransaction\x12).transaction.CompensateTransactionRequest\x1a .transaction.TransactionResponse\"\x00B?Z=github.com/hailsayan/achilles/proto/transaction;transactionpbb\x06proto3"

var (
	file_transaction_transaction_proto_rawDescOnce sync.Once
	file_transaction_transaction_proto_rawDescData []byte
)

func file_transaction_transaction_proto_rawDescGZIP() []byte {
	file_transaction_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transaction_transaction_proto_rawDesc), len(file_transaction_transaction_proto_rawDesc)))
	})
	return file_transaction_transaction_proto_rawDescData
}

var file_transaction_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_transaction_transaction_proto_goTypes = []any{
	(*DepositRequest)(nil),               // 0: transaction.DepositRequest
	(*WithdrawRequest)(nil),              // 1: transaction.WithdrawRequest
	(*TransferRequest)(nil),              // 2: transaction.TransferRequest
	(*TransactionResponse)(nil),          // 3: transaction.TransactionResponse
	(*GetTransactionRequest)(nil),        // 4: transaction.GetTransactionRequest
	(*RetryTransactionRequest)(nil),      // 5: transaction.RetryTransactionRequest
	(*CompensateTransactionRequest)(nil), // 6: transaction.CompensateTransactionRequest
	(*TransactionHistoryRequest)(nil),    // 7: transaction.TransactionHistoryRequest
	(*TransactionHistoryResponse)(nil),   // 8: transaction.TransactionHistoryResponse
	(*Transaction)(nil),                  // 9: transaction.Transaction
	(*TransactionEvent)(nil),             // 10: transaction.TransactionEvent
}
var file_transaction_transaction_proto_depIdxs = []int32{
	9,  // 0: transaction.TransactionResponse.transaction:type_name -> transaction.Transaction
	9,  // 1: transaction.TransactionHistoryResponse.transactions:type_name -> transaction.Transaction
	10, // 2: transaction.Transaction.events:type_name -> transaction.TransactionEvent
	0,  // 3: transaction.TransactionService.Deposit:input_type -> transaction.DepositRequest
	1,  // 4: transaction.TransactionService.Withdraw:input_type -> transaction.WithdrawRequest
	2,  // 5: transaction.TransactionService.Transfer:input_type -> transaction.TransferRequest
	7,  // 6: transaction.TransactionService.GetTransactionHistory:input_type -> transaction.TransactionHistoryRequest
	4,  // 7: transaction.TransactionService.GetTransactionById:input_type -> transaction.GetTransactionRequest
	5,  // 8: transaction.TransactionService.RetryTransaction:input_type -> transaction.RetryTransactionRequest
	6,  // 9: transaction.TransactionService.CompensateTransaction:input_type -> transaction.CompensateTransactionRequest
	3,  // 10: transaction.TransactionService.Deposit:output_type -> transaction.TransactionResponse
	3,  // 11: transaction.TransactionService.Withdraw:output_type -> transaction.TransactionResponse
	3,  // 12: transaction.TransactionService.Transfer:output_type -> transaction.TransactionResponse
	8,  // 13: transaction.TransactionService.GetTransactionHistory:output_type -> transaction.TransactionHistoryResponse
	3,  // 14: transaction.TransactionService.GetTransactionById:output_type -> transaction.TransactionResponse
	3,  // 15: transaction.TransactionService.RetryTransaction:output_type -> transaction.TransactionResponse
	3,  // 16: transaction.TransactionService.CompensateTransaction:output_type -> transaction.TransactionResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_transaction_transaction_proto_init() }
func file_transaction_transaction_proto_init() {
	if File_transaction_transaction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transaction_transaction_proto_rawDesc), len(file_transaction_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transaction_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_transaction_proto_msgTypes,
	}.Build()
	File_transaction_transaction_proto = out.File
	file_transaction_transaction_proto_goTypes = nil
	file_transaction_transaction_proto_depIdxs = nil
}
